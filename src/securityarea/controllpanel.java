/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package securityarea;

/**
 *
 * @author iuhs
 */
public class controllpanel extends javax.swing.JFrame implements observer{
 observable obj;
 String name;
 int hsoldier; int hammoamount; int hfual;
  int tsoldier; int tammoamount; int tfual;
   int ssoldier; int sammoamount; int sfual;
   
   private String helicopterStrength = "";
private String tankStrength = "";
private String submarineStrength = "";
   
    public controllpanel( observable obj,String name) {
       
        initComponents();
         this.obj=obj;
        this.name=name;
        // jTextArea3.setText("Helicopter Strength Waiting ...\n\n"+"Tank Strength Waiting ...\n\n"+"Submarine Strength Waiting ...\n\n");
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Send = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jSlider2 = new javax.swing.JSlider();
        Collect_Informations = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        message = new javax.swing.JTextArea();
        jCheckBox2 = new javax.swing.JCheckBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        a = new javax.swing.JLabel();
        b = new javax.swing.JLabel();
        c = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Send.setText("Send");
        Send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Helicopter", "Tank", "Submarine" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jSlider2.setPaintLabels(true);
        jSlider2.setValue(0);
        jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider2StateChanged(evt);
            }
        });

        Collect_Informations.setText("Collect Informations");
        Collect_Informations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Collect_InformationsActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Area Clear");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        message.setColumns(20);
        message.setRows(5);
        jScrollPane2.setViewportView(message);

        jCheckBox2.setText("Send Private");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        jLabel1.setText("Soldier Count");

        jLabel2.setText("Fuel Amount");

        jLabel3.setText("Ammo Amount");

        jLabel4.setText("Position");

        a.setText("0");

        b.setText("0");

        c.setText("0");

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jTextArea3.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                jTextArea3HierarchyChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(Collect_Informations))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(c)
                                    .addComponent(b)
                                    .addComponent(a))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCheckBox1)
                                .addGap(98, 98, 98))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox2)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(41, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Send)
                        .addGap(96, 96, 96))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBox1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Collect_Informations))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(a))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(b))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(c))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(Send))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane1))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendActionPerformed
        // TODO add your handling code here:
        
        if(jCheckBox2.isSelected()){
           if(message.getText().equals("")){
             System.out.println("eoor");
        }
        else{
                 String selectedItem = (String) jComboBox1.getSelectedItem();
                 
                 if(selectedItem.equals("Helicopter")){
                 obj.privatehelicopter(message.getText(), name);
                 }
                 else if (selectedItem.equals("Tank")) {
                 obj.privatetanke(message.getText(), name);}
                 else if (selectedItem.equals("Submarine")) {
                 obj.privatesubmarine(message.getText(), name);}
                 
                System.out.println(message.getText());
               
               
        }
            
        }
        
        else{
          if(message.getText().equals("")){
             System.out.println("eoor");
        }
        else{
            obj.msgall(message.getText(), name);
        }
        }

    }//GEN-LAST:event_SendActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
     

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox1.isSelected()){
            obj.areaclearmsg("Area Clear");
        }
        else{
            obj.areaclearmsg("Area Not Cleared");
        }
        
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void Collect_InformationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Collect_InformationsActionPerformed
        // TODO add your handling code here:
        
        String selectedItem = (String) jComboBox1.getSelectedItem();
        
         if (selectedItem.equals("Helicopter")) {
         a.setText(hsoldier+"");
         b.setText(hfual+"");
         c.setText(hammoamount+"");
         
         }
         else if (selectedItem.equals("Tank")) {
          a.setText(tsoldier+"");
           b.setText(tfual+"");
          c.setText(tammoamount+"");
         }
         else if (selectedItem.equals("Submarine")) {
          a.setText(ssoldier+"");
         b.setText(sfual+"");
         c.setText(sammoamount+"");
          }
        
    }//GEN-LAST:event_Collect_InformationsActionPerformed

    private void jSlider2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider2StateChanged
        // TODO add your handling code here:
        int buttonenable=jSlider2.getValue();
        obj.buttonenable(buttonenable);
        
          
    }//GEN-LAST:event_jSlider2StateChanged

    private void jTextArea3HierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jTextArea3HierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextArea3HierarchyChanged
         public void update(String msg,String msgername) {
        if(this.name.equals(msgername)){
         jTextArea1.setText(jTextArea1.getText()+"ME  : "+msg+"\n\n");   
        }
        else{
          jTextArea1.setText(jTextArea1.getText()+msgername+"  : "+msg+"\n\n");    
        }
    }

        

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Collect_Informations;
    private javax.swing.JButton Send;
    private javax.swing.JLabel a;
    private javax.swing.JLabel b;
    private javax.swing.JLabel c;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea message;
    // End of variables declaration//GEN-END:variables

    @Override
    public void areaclear(String area) {
       // throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void counttank(int soldier, int ammoamount, int fual) {
               this.tsoldier=soldier;
             this.tammoamount=ammoamount;
             this.tfual=fual;    }

    @Override
    public void countsubmariene(int soldier, int ammoamount, int fual) {
             this.ssoldier=soldier;
             this.sammoamount=ammoamount;
             this.sfual=fual;    }

    @Override
    public void counthelicopter(int soldier, int ammoamount, int fual) {
             this.hsoldier=soldier;
             this.hammoamount=ammoamount;
             this.hfual=fual;
              
    }

    @Override
    public void privatehelicopter(String text, String name) {
         jTextArea1.setText(jTextArea1.getText()+"ME (private helicopter)  : "+text+"\n\n");   
        }

    @Override
    public void privatetanke(String text, String name) {
         jTextArea1.setText(jTextArea1.getText()+"ME (private Tank)  : "+text+"\n\n");   
         }

    @Override
    public void privatesubmarine(String text, String name) {
         jTextArea1.setText(jTextArea1.getText()+"ME (private Submarine) : "+text+"\n\n");   
           }

    @Override
    public void buttonenable(int value) {
       // throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

              @Override
public void helicopterupdateStrengthText(String name, String Strength) {
    updateStrength(name, Strength);
}

@Override
public void tankupdateStrengthText(String name, String Strength) {
    updateStrength(name, Strength);
}

@Override
public void submarineupdateStrengthText(String name, String Strength) {
    updateStrength(name, Strength);
}

private void updateStrength(String name, String Strength) {
    String[] split = jTextArea3.getText().split("\n");
    String clear = "";

    boolean updated = false;
    for (String line : split) {
        if (line.startsWith(name + " Strength :")) {
            clear += name + " Strength : " + Strength + "\n";
            updated = true;
        } else {
            clear += line + "\n";
        }
    }
    if (!updated) {
        clear += name + " Strength : " + Strength + "\n";
    }
    jTextArea3.setText(clear.trim());
}

   
}
